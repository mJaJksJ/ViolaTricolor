// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViolaTricolor.Database;

#nullable disable

namespace ViolaTricolor.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220806181955_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("ViolaTricolor.Database.Entities.FriendsJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("RelationsStatus")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WhoId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WhomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WhoId");

                    b.HasIndex("WhomId");

                    b.ToTable("FriendsJournal", (string)null);
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.VkFriend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FirstFriendId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SecondFriendId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FirstFriendId");

                    b.HasIndex("SecondFriendId");

                    b.ToTable("VkFriends", (string)null);
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.VkUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VtUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VtUserId");

                    b.ToTable("VkUsers", (string)null);
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.VTUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<long?>("VkUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("VkUserId");

                    b.ToTable("VTUsers", (string)null);
                });

            modelBuilder.Entity("VTUserVkUser", b =>
                {
                    b.Property<long>("ObservableVkUsersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObserverVTUsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ObservableVkUsersId", "ObserverVTUsersId");

                    b.HasIndex("ObserverVTUsersId");

                    b.ToTable("VTUserVkUser");
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.FriendsJournal", b =>
                {
                    b.HasOne("ViolaTricolor.Database.Entities.VkUser", "Who")
                        .WithMany()
                        .HasForeignKey("WhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViolaTricolor.Database.Entities.VkUser", "Whom")
                        .WithMany()
                        .HasForeignKey("WhomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Who");

                    b.Navigation("Whom");
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.VkFriend", b =>
                {
                    b.HasOne("ViolaTricolor.Database.Entities.VkUser", "FirstFriend")
                        .WithMany()
                        .HasForeignKey("FirstFriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViolaTricolor.Database.Entities.VkUser", "SecondFriend")
                        .WithMany()
                        .HasForeignKey("SecondFriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstFriend");

                    b.Navigation("SecondFriend");
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.VkUser", b =>
                {
                    b.HasOne("ViolaTricolor.Database.Entities.VTUser", "VtUser")
                        .WithMany()
                        .HasForeignKey("VtUserId");

                    b.Navigation("VtUser");
                });

            modelBuilder.Entity("ViolaTricolor.Database.Entities.VTUser", b =>
                {
                    b.HasOne("ViolaTricolor.Database.Entities.VkUser", "VkUser")
                        .WithMany()
                        .HasForeignKey("VkUserId");

                    b.Navigation("VkUser");
                });

            modelBuilder.Entity("VTUserVkUser", b =>
                {
                    b.HasOne("ViolaTricolor.Database.Entities.VkUser", null)
                        .WithMany()
                        .HasForeignKey("ObservableVkUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViolaTricolor.Database.Entities.VTUser", null)
                        .WithMany()
                        .HasForeignKey("ObserverVTUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
